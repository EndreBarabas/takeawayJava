/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package takeaway;

import java.util.Map;
import java.util.Scanner;
import java.util.HashMap;
import java.util.Map.Entry;

public class Main {

    public HashMap<String, Integer> chosenDish = new HashMap<String, Integer>();
    static Menu menu = new Menu();
    Boolean endOfInput = false;

    public void displayMenu(Map<String, Integer> list) {
        System.out.println("---------\nOur menu:\n");
        int i = 1;

        for (Map.Entry<String, Integer> set : list.entrySet()) {
            String name = set.getKey();
            Integer price = set.getValue();
            System.out.printf("%d. %s - %d£\n", i, name, price);
            i++;
        }
        System.out.println("---------");
    }

    public void displayOrder() {
        System.out.println("Here is your current order: ");
        Integer total = 0;
        for (Map.Entry<String, Integer> set : chosenDish.entrySet()) {
            String name = set.getKey();
            Integer price = set.getValue();
            total += price;
            System.out.printf("%s - %d£\n", name, price);
        }
        System.out.printf("Your total is: %d£\n", total);
    }

    public void sendConfirm() {
        System.out.println("Confirmation sent");
        Confirmator confirmator = new Confirmator();
        confirmator.sendMessage();
    }

    public void addDish(Integer input, Map<String, Integer> list) {
        // I want to link the original menu with the chosenDish one and not adding
        // raw data to the chosenDish
        switch (input) {
            case 1:
                // chosenDish.put(list.get("Pizza"),list.getValue("Pizza")));
                chosenDish.put("Pizza", list.get("Pizza"));
                break;
            case 2:
                chosenDish.put("Burger", list.get("Burger"));
                break;
            case 3:
                chosenDish.put("Meatballs", list.get("Meatballs"));
                break;
            case 4:
                chosenDish.put("Fries", list.get("Fries"));
                break;
            case 5:
                chosenDish.put("Steak", list.get("Steak"));
                break;
            case 6:
                chosenDish.put("Fish", list.get("Fish"));
                break;
            case 7:
                chosenDish.put("Pasta", list.get("Pasta"));
                break;
            case 8:
                chosenDish.put("Rice", list.get("Rice"));
                break;
            default:
                System.out.println("You did not give me a valid value.");
                break;
        }
    }

    public void orderAdding() {
        Scanner reader = new Scanner(System.in);
        Integer input;
        //Boolean continue; //Why is the boolean class underlined?
        
        while (!endOfInput) {
            System.out.println("Which item would you like?");
            input = reader.nextInt();
            addDish(input, menu.list());
            System.out.println("Is there anything else you would like?");
            //do{
                System.out.println("1. Yes (please)");
                System.out.println("2. No");  
                input = reader.nextInt();
                switch (input) {
                    case 1:
                        continue;
                    case 2:
                        endOfInput = true;
                        break;
                    default: 
                        System.out.println("That was not a valid option.. But I will take it as a yes.");

                } 
            //} while(continue);
        }
        reader.close();
    }

    public static void main(String[] args) {
        Main main = new Main();
        main.displayMenu(menu.list());
        main.orderAdding();
        if (main.chosenDish.size() > 0) {
            main.displayOrder();
            main.sendConfirm();
        } else {
            System.out.println("You did not choose anything.");
        }
    }
}
